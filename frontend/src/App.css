/* CSS Reset */
*{
  margin: 0;
  padding: 0;
}
body {
  overflow-x: hidden;
}
.inline-elements {
  white-space: nowrap;
}





.boxx {
  
  /* Apply transition for the properties you want to animate on hover */
  transition: background-color 0.3s ease, transform 0.3s ease;
}

/* Style changes when the box is being hovered over */
.boxx:hover {
 
  transform: scale(1.1); /* Scale the box on hover */
}


#navbar {
  display: flex;
  align-items: center;
  position: sticky;
  top: 0px;
  z-index: 1; /* Update the z-index to ensure the navbar appears above other elements */
}

#navbar::before {
  content: "";
  /* background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)); */
  
  position: absolute;
  top: 0px;
  left: 0px;
  height: 100%;
  width: 100%;
  z-index: -1;
  opacity: 0.4;
}

.gradient{
 
background:  linear-gradient(to right, #c6ffdd, #fbd786, #ededed);
}

html{
  scroll-behavior: smooth;
}

/* CSS Variables */
:root{
  --navbar-height: 59px;
}

/* Navigation Bar */
#navbar{
  display: flex;
  align-items: center;
  position: sticky;
  top: 0px;
}
.modalcolor{
 background-color:gold;
 box-shadow: 0 0 5px rgba(11, 0, 0, 0.3);
 text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
  
  opacity: 0.9;
}
#navbar::before{
  content: "";
  background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5));
  position: absolute;
  top:0px;
  left:0px;
  height: 100%;
  width:100%;
  z-index: -1;
  opacity: 0.6;
}

/* Navigation Bar: Logo and Image */
#logo{
  margin: 10px 34px;
}

#logo img{
  height: 49px;
  margin: 3px 6px;
}


/* Navigation Bar: List Styling */

#navbar Nav.Link{
  display: flex;
  font-family: 'Baloo Bhai', cursive;
}

#navbar { 
  list-style: none;
  font-size: 1.3rem;
}

#navbar ul li a{
  color: white;
  display: block;
  padding: 3px 22px;
  border-radius: 20px;
  text-decoration: none;
}
.NavLink{
  color:white;
  margin-top :1rem;
}
.NavLink:hover{
  color:black;
}
#navbar ul li a:hover{
  color: black;
  background-color: white;
}

/* Home Section */
#home {
  margin: 0; /* Remove default margin to avoid extra spacing */
  word-wrap: break-word; /* Allow words to wrap within paragraphs */
}
.package-flow{
  margin: 0; /* Remove default margin to avoid extra spacing */
  word-wrap: break-word; /* Allow words to wrap within paragraphs */
}
#home{
  display: flex;
  flex-direction: column;
  padding:3px 100px;
  height: 550px;
  justify-content: center;
  align-items: center;
}

#home::before{ 
  content: "";
  position: absolute;
  /* background: url('./Images/tap.jpg') no-repeat center center/cover; */
  background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),url('./Images/land.jpg') no-repeat center center/cover;
  height: 90%;
  top:0px;
  left:0px;
  width: 100%;
  z-index: -1;
  opacity:0.79;
  
  min-height: 100vh;
}

#home h1{
  color:white;
  text-align: center;
  font-family: 'Bree Serif', serif;
}

#home p{
  color:white;
  text-align: center;
  font-size: 1.5rem;
  font-family: 'Bree Serif', serif;
}
/* Services Section */
#services{
  margin: 34px;
  display: flex;
}
#services .box{ 
  border: 2px solid brown;
  padding: 34px;
  margin: 2px 55px;
  border-radius: 28px;
  background: #f2f2f2;
  margin-bottom: 20px;
}

#services .box img{ 
 height: 160px;
 margin: auto;
 display: block;
}

#services .box p{
  font-family: 'Bree Serif', serif;

} 

/* Clients Section */
#client-section{ 
  position: relative;
}

#client-section::before{
content: "";
position: absolute;
/* background: url('./Images/bg.jpg'); */
/* width: 100%;
height: 100%; */
top:0px;
  left:0px;
z-index: -1;
opacity: 0.89;
}

#clients{
  display: flex;
  justify-content: center;
  align-items: center;
}

.client-item{
  padding: 24px;
}

/* #clients img{
  height: 124px;
} */
#clients {
  max-height: 200px; /* Set the maximum height of the section */
  overflow-y: auto; /* Enable vertical scrollbar when content exceeds the max height */
}

/* Contact Section */
#contact{
  position: relative;
}
#contact::before{
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: -1;
  opacity: 0.5;
  background: url('./Images/texture-g6868651f1_1280.jpg') no-repeat center center/cover;
  

}

#clients img {
  height: 1.8rem !important;
}
#contact-box{
  display: flex;
  justify-content: center;
  align-items: center;
  padding-bottom: 34px;
}
#contact-box input, 
#contact-box textarea{
  width: 100%;
  padding: 0.5rem;
  border-radius: 9px;
  font-size: 1.1rem;
} 

#contact-box form{
  width: 55%;
}

#contact-box label{
 font-size: 1.3rem;
 font-family: 'Bree Serif', serif;

}


/* footer{
  background: black;
  color: white;
  padding: 9px 20px;
} */

/* Utility Classes */
.h-primaryy{
  font-family: 'Bree Serif', serif;
  font-size: 3.8rem;
  padding: 12px;
  color: rgb(7, 1, 6);
  
}

.h-secondary{
  font-family: 'Bree Serif', serif;
  font-size: 2.3rem;
  padding: 12px;
}

.btn{
  padding: 6px 20px;
  border: 2px solid white;
  background-color: brown;
  color: white;
  margin: 17px;
  font-size: 1.5rem;
  border-radius: 10px;
  cursor:pointer;
}

.center{
  text-align: center;
}

.custom-label {
  font-size: 16px;
  color: #333;
  font-weight: bold;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  margin-bottom: 5px;
}

/* Optional: If you want to add some animation to the label, you can use the following */
.custom-label {
  transition: transform 0.3s ease;
}

.custom-input:focus + .custom-label {
  transform: translateY(-20px); /* Move the label up when input is focused */
  font-size: 12px; /* Optional: Reduce font size when input is focused */
  color: #fca311; /* Optional: Change label color when input is focused */
}

.custom-input {
  /* Your existing custom input styles */
  box-shadow: 0 0 5px rgba(11, 0, 0, 0.3); /* Add initial shadow when input is not focused */
}
.custom-input:focus {
  box-shadow: 0 0 8px rgba(0, 0, 0, 0.5); /* Add a stronger shadow when input is focused */
}

.form-group {
  display: flex;
  align-items: center; 
  flex-direction: column;/* Center vertically */
}

/* Add some spacing between label and input */
.form-group label {
  margin-right: 10px;
}





.footer {
  background-color: rgb(9, 0, 8);
  color: #fff;
  padding: 20px;
  text-align: center;
  
}

.footer-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  
}

.footer p {
  margin-bottom: 10px;
}

.social-icons {
  display: flex;
  gap: 70px;
  justify-content: space-around;
}

.icon {
  font-size: 24px;
  color: #fff;
  text-decoration: none;
}

/* Add hover styles for social media icons if desired */
.icon:hover {
  color: #fca311;
}




.client-image {
  /* Your existing styles for the image, if any */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.4); /* Initial dark drop shadow */
  transition: box-shadow 0.3s ease; /* Add transition for smooth animation */
  cursor: pointer; /* Optional: Show a pointer cursor when hovering over the image */
}

.client-image:focus {
  outline: none; /* Remove the default focus outline */
  box-shadow: 0 0 8px rgba(0, 0, 0, 0.8); /* Add drop shadow on focus */
}









/* Custom Input Styles */
.custom-input {
  width: 100%;
  padding: 12px;
  border: 2px solid #4d2c18;
  border-radius: 8px;
  font-size: 16px;
  color: #333;
  outline: none;
  transition: border-color 0.3s ease;
}

.custom-input::placeholder {
  color: #aaa;
}

.custom-input:focus {
  border-color: #eb6c1d;
}

/* Optional: Add some box shadow to give a subtle depth effect */
.custom-input {
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

/* Optional: If you want to center the input horizontally, you can use the following CSS */
.custom-input {
  display: block;
  margin: 0 auto;
  max-width: 500px;
}

button {
  padding: 0;
  border: none;
  outline: none;
  background-color: transparent;
  font-family: Arial, sans-serif;
  font-size: 16px;
  cursor: pointer;
}

/* Button styles */
.custom-button {
  padding: 12px 24px;
  background-color: red;
  color: white;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  transition: background-color 0.3s ease;
}

.custom-button:hover {
  background-color: gold;
  color : black
}

.custom-button:active {
  background-color: red;
}







.scrollable-container {
  overflow-x: auto; /* Add horizontal scrollbar */
}

/* Flex container styles */
.flex-container {
  display: flex;
  /* overflow: hidden; Hide any overflow from the flex container */
  overflow-x: auto;
}

/* Flex item styles */
.flex-item {
  flex: 0 0 25%; /* Each item occupies 25% of the flex container width */
  background-color: lightblue;
  padding: 20px;
  margin: 10px;
  border-radius: 5px;
  text-align: center;
}

/* Add media query for small screen sizes */
@media (max-width: 600px) {
  .flex-item {
    /* For small screens, each item occupies 50% of the flex container width */
    flex: 0 0 50%;
  }
}
/* In this example, we wrap the .flex-container inside a new container .scrollable-container. We add overflow-x: auto to the .scrollable-container, which will create a horizontal scrollbar when the .flex-container content overflows.

We then set overflow: hidden on the .flex-container to prevent the flex items from overflowing outside the container and ensure they stay on the same line. The .flex-container will scroll horizontally within the .scrollable-container whenever the content is wider than the container's visible area.

This way, you'll have a scrollable flex container that displays all the flex items on the same line, and you can scroll horizontally to view all items. */




.image-container {
  /* max-width: 80%; Ensure the container doesn't exceed the screen width */
  text-align: center; /* Center the image horizontally */
}

/* Responsive image styles */
.responsive-image {
  max-width: 80%;
  max-height: 60%; /* Make the image responsive by limiting its maximum width */
  height: auto; /* Allow the image height to adjust proportionally */
  display: block; /* Remove extra spacing from inline elements */
  margin: 0 auto; /* Center the image horizontally within its container */
}
.shadow-box {
 

  border-radius: 10px; /* Rounded corners for the box */
  box-shadow: 0 4px 8px rgba(255, 165, 0, 0.6); /* Orange-golden box shadow */
}